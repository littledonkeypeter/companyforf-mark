import cv2

# Load the image
img = cv2.imread("shape.jpg")

# Convert the image to grayscale
gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

# Threshold the image to create a binary image
_, thresh = cv2.threshold(gray, 127, 255, cv2.THRESH_BINARY)

# Find the contours in the image
contours, _ = cv2.findContours(thresh, cv2.RETR_LIST, cv2.CHAIN_APPROX_SIMPLE)

# Loop through the contours
for cnt in contours:
    # Approximate the contour with a polygon
    approx = cv2.approxPolyDP(cnt, 0.01*cv2.arcLength(cnt, True), True)

    # Check if the shape is closed
    if len(approx) == 4:
        cv2.drawContours(img, [approx], 0, (0, 255, 0), 2)
        print("The shape is closed.")
    else:
        cv2.drawContours(img, [approx], 0, (0, 0, 255), 2)
        print("The shape is broken.")

# Show the image
cv2.imshow("Shape Detection", img)
cv2.waitKey(0)
cv2.destroyAllWindows()
